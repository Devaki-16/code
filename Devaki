package com.example.jsondemo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class JsonDemoApplication {
    public static void main(String[] args) {
        SpringApplication.run(JsonDemoApplication.class, args);
    }
}



package com.example.jsondemo.service;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Service;
import org.springframework.util.ResourceUtils;

import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.Map;

@Service
public class JsonProcessorService {
    private final ObjectMapper objectMapper;

    public JsonProcessorService(ObjectMapper objectMapper) {
        this.objectMapper = objectMapper;
    }

    public void processAndPrintJson(String filePath) throws IOException {
        String jsonContent = new String(Files.readAllBytes(ResourceUtils.getFile(filePath).toPath()));
        
        List<Map<String, Object>> entities = objectMapper.readValue(
            jsonContent, 
            new TypeReference<List<Map<String, Object>>>() {}
        );

        entities.stream()
            .peek(entity -> System.out.println("\n=== Entity ==="))
            .peek(entity -> System.out.println("Name: " + entity.get("name")))
            .peek(entity -> {
                System.out.println("Identifiers:");
                ((List<Map<String, String>>) entity.get("identifiers")).stream()
                    .forEach(id -> System.out.printf("  - Type: %s, Value: %s%n", 
                        id.get("type"), id.get("value")));
            })
            .forEach(entity -> {
                Map<String, String> businessGroup = (Map<String, String>) entity.get("businessGroup");
                System.out.println("Business Group:");
                System.out.printf("  - Name: %s%n", businessGroup.get("name"));
                System.out.printf("  - Code: %s%n", businessGroup.get("code"));
            });
    }
}








package com.example.jsondemo.runner;

import com.example.jsondemo.service.JsonProcessorService;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class JsonConsolePrinterRunner implements CommandLineRunner {
    private final JsonProcessorService jsonProcessorService;

    public JsonConsolePrinterRunner(JsonProcessorService jsonProcessorService) {
        this.jsonProcessorService = jsonProcessorService;
    }

    @Override
    public void run(String... args) throws Exception {
        System.out.println("\nStarting JSON processing...");
        jsonProcessorService.processAndPrintJson("classpath:entities.json");
        System.out.println("\nJSON processing completed!");
    }
}










# Basic Spring Boot properties
spring.application.name=json-demo




