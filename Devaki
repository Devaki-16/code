package com.example.jsonreader;

import com.example.jsonreader.model.EntityData;
import com.example.jsonreader.service.JsonReaderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import java.util.List;

@SpringBootApplication
public class JsonReaderApplication implements CommandLineRunner {

    @Autowired
    private JsonReaderService jsonReaderService;

    public static void main(String[] args) {
        SpringApplication.run(JsonReaderApplication.class, args);
    }

    @Override
    public void run(String... args) {
        List<EntityData> entities = jsonReaderService.readEntities();
        entities.forEach(System.out::println);
    }
}



package com.example.jsonreader.service;

import com.example.jsonreader.model.EntityData;
import com.example.jsonreader.model.Wrapper;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Service;

import java.io.InputStream;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class JsonReaderService {

    public List<EntityData> readEntities() {
        try {
            ObjectMapper mapper = new ObjectMapper();
            InputStream inputStream = new ClassPathResource("data/entities.json").getInputStream();

            List<Wrapper> wrappers = mapper.readValue(inputStream,
                    mapper.getTypeFactory().constructCollectionType(List.class, Wrapper.class));

            return wrappers.stream()
                    .map(Wrapper::getEntity)
                    .collect(Collectors.toList());

        } catch (Exception e) {
            throw new RuntimeException("Failed to read JSON file", e);
        }
    }
}




package com.example.jsonreader.model;

import lombok.Data;
import java.util.List;

@Data
public class EntityData {
    private List<String> identifiers;
    private String businessGroup;
}







package com.example.jsonreader.model;

import lombok.Data;

@Data
public class Wrapper {
    private EntityData entity;
}








package com.example.jsonreader.model;

import lombok.Data;
import java.util.List;

@Data
public class EntityResponse {
    private List<Wrapper> entities;
}










# Server config (not used since no web layer is active)
server.port=8080

# Logging config
logging.level.org.springframework=INFO
spring.jackson.serialization.indent_output=true









public List<EntityData> readEntities() {
    try {
        ObjectMapper mapper = new ObjectMapper();

        // Print debug message
        System.out.println("Trying to load: data/entities.json");

        InputStream inputStream = new ClassPathResource("data/entities.json").getInputStream();

        System.out.println("File loaded. Reading contents...");

        List<Wrapper> wrappers = mapper.readValue(inputStream,
                mapper.getTypeFactory().constructCollectionType(List.class, Wrapper.class));

        System.out.println("Parsing complete. Extracting entity data...");

        return wrappers.stream()
                .map(Wrapper::getEntity)
                .collect(Collectors.toList());

    } catch (Exception e) {
        System.out.println("Error details: " + e.getMessage());  // Print actual cause
        e.printStackTrace();  // Print full stack trace
        throw new RuntimeException("Failed to read JSON file", e);
    }
}

